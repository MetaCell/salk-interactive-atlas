# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2022-05-19T14:16:24+00:00

from __future__ import annotations

import os

from django.apps import apps
from django.conf import settings
from django.core.asgi import get_asgi_application
from fastapi import FastAPI
from starlette.exceptions import HTTPException as StarletteHTTPException
from starlette.middleware.cors import CORSMiddleware
from starlette.responses import FileResponse, JSONResponse
from fastapi.staticfiles import StaticFiles


os.environ.setdefault("DJANGO_SETTINGS_MODULE", "workspaces.settings")
apps.populate(settings.INSTALLED_APPS)

# migrate the Django models
os.system("python manage.py migrate")

app = FastAPI(
    contact={"email": "zoran@metacell.us"},
    description="Salk Workspaces",
    license={"name": "UNLICENSED"},
    title="Salk Workspaces",
    version="1.0.0",
    debug=settings.DEBUG,
)

app.add_middleware(
    CORSMiddleware,
    allow_origins=settings.ALLOWED_HOSTS or ["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# init the auth service
from cloudharness_django.services import init_services
init_services()

# start the kafka event listener
import cloudharness_django.services.events

# django static mounts
app.mount("/static", StaticFiles(directory=settings.STATIC_ROOT), name="static")
# main django app mount
app.mount("/backend", get_asgi_application())
# frontend mounts
frontend_path = os.path.join(settings.STATIC_ROOT, "www")
app.mount("/", StaticFiles(directory=frontend_path, html=True), name="frontend")

@app.exception_handler(StarletteHTTPException)
async def http_exception_handler(request, exc):
    if exc.status_code == 404:
        # 404 return the react index.html so react can do it's routing thing :-)
        return FileResponse(f"{frontend_path}/index.html")
    return JSONResponse(
        {"detail": exc.detail},
        status_code=exc.status_code,
        headers=exc.headers
    )
