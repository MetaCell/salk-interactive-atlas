/* tslint:disable */
/* eslint-disable */
/**
 * Workspaces
 * API for all experiments...
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Experiment
 */
export interface Experiment {
    /**
     * 
     * @type {number}
     * @memberof Experiment
     */
    readonly id?: number;
    /**
     * 
     * @type {Date}
     * @memberof Experiment
     */
    dateCreated: Date;
    /**
     * 
     * @type {string}
     * @memberof Experiment
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Experiment
     */
    description: string;
    /**
     * 
     * @type {boolean}
     * @memberof Experiment
     */
    isPrivate?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Experiment
     */
    ownerUserId: string;
    /**
     * 
     * @type {Date}
     * @memberof Experiment
     */
    readonly lastModified?: Date;
}

export function ExperimentFromJSON(json: any): Experiment {
    return ExperimentFromJSONTyped(json, false);
}

export function ExperimentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Experiment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'dateCreated': (new Date(json['date_created'])),
        'name': json['name'],
        'description': json['description'],
        'isPrivate': !exists(json, 'is_private') ? undefined : json['is_private'],
        'ownerUserId': json['owner_user_id'],
        'lastModified': !exists(json, 'last_modified') ? undefined : (new Date(json['last_modified'])),
    };
}

export function ExperimentToJSON(value?: Experiment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'date_created': (value.dateCreated.toISOString().substr(0,10)),
        'name': value.name,
        'description': value.description,
        'is_private': value.isPrivate,
        'owner_user_id': value.ownerUserId,
    };
}


