{"version":3,"sources":["../../src/capabilities/AParameterCapability.js"],"names":["Instance","require","Variable","capabilityId","value","getUnit","unit","undefined","initialValues","getVariable","getWrappedObj","i","length","eClass","getInitialValue","initVal","getValue","isStatic","getScalingFactor","scalingFactor","setValue","updateServer"],"mappings":";;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,mBAAD,CAAP,WAAf;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,mBAAD,CAAP,WAAf;;eAEe;AACbE,EAAAA,YAAY,EAAE,qBADD;AAEbC,EAAAA,KAAK,EAAE,IAFM;;AAIb;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,OAAO,EAAE,mBAAY;AACnB,QAAIC,IAAI,GAAGC,SAAX;AACA,QAAIC,aAAa,GAAG,IAApB;;AAEA,QAAI,gBAAgBR,QAApB,EAA8B;AAC5BQ,MAAAA,aAAa,GAAG,KAAKC,WAAL,GAAmBC,aAAnB,GAAmCF,aAAnD;AACD,KAFD,MAEO,IAAI,gBAAgBN,QAApB,EAA6B;AAClCM,MAAAA,aAAa,GAAG,KAAKE,aAAL,GAAqBF,aAArC;AACD;;AAED,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,aAAa,CAACI,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAIH,aAAa,CAACG,CAAD,CAAb,CAAiBP,KAAjB,CAAuBS,MAAvB,KAAkC,kBAAtC,EAA0D;AACxDP,QAAAA,IAAI,GAAGE,aAAa,CAACG,CAAD,CAAb,CAAiBP,KAAjB,CAAuBE,IAAvB,CAA4BA,IAAnC;AACD;AACF;;AAED,WAAOA,IAAP;AACD,GA3BY;;AA6Bb;AACF;AACA;AACA;AACA;AACEQ,EAAAA,eAAe,EAAE,2BAAY;AAC3B,QAAIC,OAAO,GAAG,IAAd;AAEA,QAAIP,aAAa,GAAG,IAApB;;AAEA,QAAI,gBAAgBR,QAApB,EAA8B;AAC5BQ,MAAAA,aAAa,GAAG,KAAKC,WAAL,GAAmBC,aAAnB,GAAmCF,aAAnD;AACD,KAFD,MAEO,IAAI,gBAAgBN,QAApB,EAA6B;AAClCM,MAAAA,aAAa,GAAG,KAAKE,aAAL,GAAqBF,aAArC;AACD;;AAED,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,aAAa,CAACI,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAIH,aAAa,CAACG,CAAD,CAAb,CAAiBP,KAAjB,CAAuBS,MAAvB,KAAkC,kBAAtC,EAA0D;AACxD;AACAE,QAAAA,OAAO,GAAGP,aAAa,CAACG,CAAD,CAAb,CAAiBP,KAAjB,CAAuBA,KAAjC;AACD;AACF;;AAED,WAAOW,OAAP;AACD,GArDY;;AAuDb;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,QAAQ,EAAE,oBAAY;AACpB,QAAIZ,KAAK,GAAG,IAAZ;;AAEA,QAAK,gBAAgBJ,QAAjB,IAA8B,KAAKS,WAAL,GAAmBQ,QAAnB,EAAlC,EAAgE;AAC9Db,MAAAA,KAAK,GAAG,KAAKK,WAAL,GAAmBO,QAAnB,EAAR;AACD,KAFD,MAEO;AACLZ,MAAAA,KAAK,GAAG,KAAKA,KAAb;AACD;;AAED,QAAIA,KAAK,IAAI,IAAT,IAAiBA,KAAK,IAAIG,SAA9B,EAAyC;AACvC;AACAH,MAAAA,KAAK,GAAG,KAAKU,eAAL,EAAR;AACD;;AAED,WAAOV,KAAP;AACD,GA5EY;;AA8Eb;AACF;AACA;AACA;AACA;AACA;AACEc,EAAAA,gBAAgB,EAAE,4BAAY;AAC5B,QAAIC,aAAa,GAAGZ,SAApB;AACA,QAAIC,aAAa,GAAG,IAApB;;AAEA,QAAI,gBAAgBR,QAApB,EAA8B;AAC5BQ,MAAAA,aAAa,GAAG,KAAKC,WAAL,GAAmBC,aAAnB,GAAmCF,aAAnD;AACD,KAFD,MAEO,IAAI,gBAAgBN,QAApB,EAA6B;AAClCM,MAAAA,aAAa,GAAG,KAAKE,aAAL,GAAqBF,aAArC;AACD;;AAED,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,aAAa,CAACI,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAIH,aAAa,CAACG,CAAD,CAAb,CAAiBP,KAAjB,CAAuBS,MAAvB,KAAkC,kBAAtC,EAA0D;AACxDM,QAAAA,aAAa,GAAGX,aAAa,CAACG,CAAD,CAAb,CAAiBP,KAAjB,CAAuBe,aAAvC;AACD;AACF;;AAED,WAAOA,aAAP;AACD,GArGY;;AAuGb;AACF;AACA;AACEC,EAAAA,QAAQ,EAAE,kBAAUhB,KAAV,EAAiBiB,YAAjB,EAA+B;AACvC,QAAIA,YAAY,IAAId,SAApB,EAA+B;AAC7Bc,MAAAA,YAAY,GAAG,IAAf;AACD,KAHsC,CAKvC;;;AACA,SAAKjB,KAAL,GAAaA,KAAb;AACA,WAAO,IAAP;AACD;AAlHY,C","sourcesContent":["\n\n/**\n * Client class use to augment a model with parameter capabilities\n *\n * @module model/AParameterCapability\n * @author Matteo Cantarelli\n * @author Giovanni Idili\n */\n\n\nvar Instance = require('../model/Instance').default;\nvar Variable = require('../model/Variable').default;\n\nexport default {\n  capabilityId: 'ParameterCapability',\n  value: null,\n\n  /**\n   * Get the type of tree this is\n   *\n   * @command Parameter.getUnit()\n   * @returns {String} Unit for quantity\n   */\n  getUnit: function () {\n    var unit = undefined;\n    var initialValues = null;\n\n    if (this instanceof Instance) {\n      initialValues = this.getVariable().getWrappedObj().initialValues;\n    } else if (this instanceof Variable){\n      initialValues = this.getWrappedObj().initialValues;\n    }\n\n    for (var i = 0; i < initialValues.length; i++) {\n      if (initialValues[i].value.eClass === 'PhysicalQuantity') {\n        unit = initialValues[i].value.unit.unit\n      }\n    }\n\n    return unit;\n  },\n\n  /**\n   * Get initial value of parameter\n   * @command Parameter.getInitialValue()\n   * @returns {String} Value of quantity\n   */\n  getInitialValue: function () {\n    var initVal = null;\n\n    var initialValues = null;\n\n    if (this instanceof Instance) {\n      initialValues = this.getVariable().getWrappedObj().initialValues;\n    } else if (this instanceof Variable){\n      initialValues = this.getWrappedObj().initialValues;\n    }\n\n    for (var i = 0; i < initialValues.length; i++) {\n      if (initialValues[i].value.eClass === 'PhysicalQuantity') {\n        // this is ugly\n        initVal = initialValues[i].value.value;\n      }\n    }\n\n    return initVal;\n  },\n\n  /**\n   * Get value of quantity\n   *\n   * @command Parameter.getValue()\n   * @returns {String} Value of quantity\n   */\n  getValue: function () {\n    var value = null;\n\n    if ((this instanceof Instance) && this.getVariable().isStatic()){\n      value = this.getVariable().getValue();\n    } else {\n      value = this.value;\n    }\n\n    if (value == null || value == undefined) {\n      // if value is empty fetch from initial values\n      value = this.getInitialValue();\n    }\n\n    return value;\n  },\n\n  /**\n   * Get scaling factor\n   *\n   * @command Parameter.getScalingFactor()\n   * @returns {String} Scaling Factor for value and unit\n   */\n  getScalingFactor: function () {\n    var scalingFactor = undefined;\n    var initialValues = null;\n\n    if (this instanceof Instance) {\n      initialValues = this.getVariable().getWrappedObj().initialValues;\n    } else if (this instanceof Variable){\n      initialValues = this.getWrappedObj().initialValues;\n    }\n\n    for (var i = 0; i < initialValues.length; i++) {\n      if (initialValues[i].value.eClass === 'PhysicalQuantity') {\n        scalingFactor = initialValues[i].value.scalingFactor;\n      }\n    }\n\n    return scalingFactor;\n  },\n\n  /**\n   * Sets Value for parameter node.\n   */\n  setValue: function (value, updateServer) {\n    if (updateServer == undefined) {\n      updateServer = true;\n    }\n\n    // always set this regardless of variable vs instance (so the value will be in the call below)\n    this.value = value;         \n    return this;\n  }\n}\n"],"file":"AParameterCapability.js"}