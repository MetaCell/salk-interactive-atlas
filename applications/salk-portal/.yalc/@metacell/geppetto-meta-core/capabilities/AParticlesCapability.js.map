{"version":3,"sources":["../../src/capabilities/AParticlesCapability.js"],"names":["capabilityId","watched","timeSeries","getTimeSeries","undefined","initialValues","getVariable","getWrappedObj","i","length","value","eClass","setTimeSeries","getInitialValue","isWatched","setWatched","updateServer"],"mappings":";;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;eAEe;AACbA,EAAAA,YAAY,EAAE,qBADD;AAEbC,EAAAA,OAAO,EAAE,KAFI;AAGbC,EAAAA,UAAU,EAAE,IAHC;;AAKb;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,aAAa,EAAE,yBAAY;AACzB,QAAI,CAAC,KAAKD,UAAV,EAAsB;AACpB,UAAIA,UAAU,GAAGE,SAAjB;AACA,UAAIC,aAAa,GAAG,KAAKC,WAAL,GAAmBC,aAAnB,GAAmCF,aAAvD;;AAEA,WAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,aAAa,CAACI,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,YAAIH,aAAa,CAACG,CAAD,CAAb,CAAiBE,KAAjB,CAAuBC,MAAvB,KAAkC,YAAtC,EAAoD;AAClDT,UAAAA,UAAU,GAAGG,aAAa,CAACG,CAAD,CAAb,CAAiBE,KAAjB,CAAuBA,KAApC;AACD;AACF;;AACD,aAAOR,UAAP;AACD;;AACD,WAAO,KAAKA,UAAZ;AACD,GAxBY;;AA2Bb;AACF;AACA;AACA;AACA;AACA;AACEU,EAAAA,aAAa,EAAE,uBAAUV,UAAV,EAAsB;AACnC,SAAKA,UAAL,GAAkBA,UAAlB;AACA,WAAO,IAAP;AACD,GApCY;;AAsCb;AACF;AACA;AACA;AACA;AACA;AACEW,EAAAA,eAAe,EAAE,2BAAY;AAE3B,WAAO,KAAKP,WAAL,GAAmBC,aAAnB,GAAmCF,aAA1C;AACD,GA/CY;;AAkDb;AACF;AACA;AACA;AACA;AACA;AACES,EAAAA,SAAS,EAAE,qBAAY;AACrB;AACA,WAAO,KAAKb,OAAZ;AACD,GA3DY;;AA6Db;AACF;AACA;AACA;AACA;AACA;AACEc,EAAAA,UAAU,EAAE,oBAAUD,SAAV,EAAqBE,YAArB,EAAmC;AAC7C,QAAIA,YAAY,IAAIZ,SAApB,EAA+B;AAC7BY,MAAAA,YAAY,GAAG,IAAf;AACD;;AACD,SAAKf,OAAL,GAAea,SAAf;AACA,WAAO,IAAP;AACD;AAzEY,C","sourcesContent":["\n\n/**\n * Client class use to augment a model with particles capabilities\n *\n * @module model/AParticlesCapability\n * @author Matteo Cantarelli\n */\n\nexport default {\n  capabilityId: 'ParticlesCapability',\n  watched: false,\n  timeSeries: null,\n\n  /**\n   * Get value of quantity\n   *\n   * @command Variable.getTimeSeries()\n   * @returns {String} Value of quantity\n   */\n  getTimeSeries: function () {\n    if (!this.timeSeries) {\n      var timeSeries = undefined;\n      var initialValues = this.getVariable().getWrappedObj().initialValues;\n\n      for (var i = 0; i < initialValues.length; i++) {\n        if (initialValues[i].value.eClass === 'TimeSeries') {\n          timeSeries = initialValues[i].value.value\n        }\n      }\n      return timeSeries;\n    }\n    return this.timeSeries;\n  },\n\n\n  /**\n   * Set the time series for the state variable\n   *\n   * @command Variable.setTimeSeries()\n   * @returns {Object} The state variable\n   */\n  setTimeSeries: function (timeSeries) {\n    this.timeSeries = timeSeries;\n    return this;\n  },\n\n  /**\n   * Get the initial value for the state variable\n   *\n   * @command Variable.getInitialValue()\n   * @returns {Object} The initial value of the state variable\n   */\n  getInitialValue: function () {\n\n    return this.getVariable().getWrappedObj().initialValues;\n  },\n\n\n  /**\n   * Get watched\n   *\n   * @command Variable.getWatched()\n   * @returns {boolean} true if this variable is being watched\n   */\n  isWatched: function () {\n    // NOTE: this.watched is a flag added by this API / Capability\n    return this.watched;\n  },\n\n  /**\n   * Set watched\n   *\n   * @command Variable.setWatched()\n   * @param {Boolean} watched - Object with options attributes to initialize node\n   */\n  setWatched: function (isWatched, updateServer) {\n    if (updateServer == undefined) {\n      updateServer = true;\n    }\n    this.watched = isWatched;\n    return this;\n  }\n}\n\n"],"file":"AParticlesCapability.js"}