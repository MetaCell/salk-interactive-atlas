{"version":3,"sources":["../../src/capabilities/AStateVariableCapability.js"],"names":["capabilityId","watched","timeSeries","unit","getTimeSeries","undefined","initialValues","getVariable","getWrappedObj","i","length","value","eClass","setTimeSeries","getInitialValue","setUnit","getUnit","extractUnit","isWatched","setWatched","updateServer"],"mappings":";;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;eAEe;AACbA,EAAAA,YAAY,EAAE,yBADD;AAEbC,EAAAA,OAAO,EAAE,KAFI;AAGbC,EAAAA,UAAU,EAAE,IAHC;AAIbC,EAAAA,IAAI,EAAE,IAJO;;AAMb;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,aAAa,EAAE,yBAAY;AACzB,QAAI,CAAC,KAAKF,UAAV,EAAsB;AACpB,UAAIA,UAAU,GAAGG,SAAjB;AACA,UAAIC,aAAa,GAAG,KAAKC,WAAL,GAAmBC,aAAnB,GAAmCF,aAAvD;;AAEA,UAAIA,aAAa,IAAID,SAArB,EAAgC;AAC9B,aAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,aAAa,CAACI,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,cAAIH,aAAa,CAACG,CAAD,CAAb,CAAiBE,KAAjB,CAAuBC,MAAvB,KAAkC,YAAtC,EAAoD;AAClDV,YAAAA,UAAU,GAAGI,aAAa,CAACG,CAAD,CAAb,CAAiBE,KAAjB,CAAuBA,KAApC;AACD;AACF;AACF;;AAED,aAAOT,UAAP;AACD;;AACD,WAAO,KAAKA,UAAZ;AACD,GA5BY;;AA+Bb;AACF;AACA;AACA;AACA;AACA;AACEW,EAAAA,aAAa,EAAE,uBAAUX,UAAV,EAAsB;AACnC,SAAKA,UAAL,GAAkBA,UAAlB;AACA,WAAO,IAAP;AACD,GAxCY;;AA0Cb;AACF;AACA;AACA;AACA;AACA;AACEY,EAAAA,eAAe,EAAE,2BAAY;AAE3B,WAAO,KAAKP,WAAL,GAAmBC,aAAnB,GAAmCF,aAA1C;AACD,GAnDY;;AAqDb;AACF;AACA;AACA;AACA;AACES,EAAAA,OAAO,EAAE,iBAAUZ,IAAV,EAAgB;AACvB,SAAKA,IAAL,GAAYA,IAAZ;AACD,GA5DY;;AA8Db;AACF;AACA;AACA;AACA;AACA;AACEa,EAAAA,OAAO,EAAE,mBAAY;AACnB,WAAQ,KAAKb,IAAL,IAAa,IAAd,GAAsB,KAAKc,WAAL,EAAtB,GAA2C,KAAKd,IAAvD;AACD,GAtEY;AAwEbc,EAAAA,WAAW,EAAE,uBAAY;AACvB,QAAId,IAAI,GAAGE,SAAX;AACA,QAAIC,aAAa,GAAG,KAAKC,WAAL,GAAmBC,aAAnB,GAAmCF,aAAvD;;AAEA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,aAAa,CAACI,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAIH,aAAa,CAACG,CAAD,CAAb,CAAiBE,KAAjB,CAAuBC,MAAvB,KAAkC,kBAAlC,IAAwDN,aAAa,CAACG,CAAD,CAAb,CAAiBE,KAAjB,CAAuBC,MAAvB,KAAkC,YAA9F,EAA4G;AAC1GT,QAAAA,IAAI,GAAGG,aAAa,CAACG,CAAD,CAAb,CAAiBE,KAAjB,CAAuBR,IAAvB,CAA4BA,IAAnC;AACD;AACF;;AACD,WAAOA,IAAP;AACD,GAlFY;;AAoFb;AACF;AACA;AACA;AACA;AACA;AACEe,EAAAA,SAAS,EAAE,qBAAY;AACrB;AACA,WAAO,KAAKjB,OAAZ;AACD,GA7FY;;AA+Fb;AACF;AACA;AACA;AACA;AACA;AACEkB,EAAAA,UAAU,EAAE,oBAAUD,SAAV,EAAqBE,YAArB,EAAmC;AAC7C,QAAIA,YAAY,IAAIf,SAApB,EAA+B;AAC7Be,MAAAA,YAAY,GAAG,IAAf;AACD;;AACD,SAAKnB,OAAL,GAAeiB,SAAf;AACA,WAAO,IAAP;AACD;AA3GY,C","sourcesContent":["\n\n/**\n * Client class use to augment a model with state variable capabilities\n *\n * @module model/AStateVariableCapability\n * @author Matteo Cantarelli\n */\n\nexport default {\n  capabilityId: 'StateVariableCapability',\n  watched: false,\n  timeSeries: null,\n  unit: null,\n\n  /**\n   * Get value of quantity\n   *\n   * @command Variable.getTimeSeries()\n   * @returns {String} Value of quantity\n   */\n  getTimeSeries: function () {\n    if (!this.timeSeries) {\n      var timeSeries = undefined;\n      var initialValues = this.getVariable().getWrappedObj().initialValues;\n\n      if (initialValues != undefined) {\n        for (var i = 0; i < initialValues.length; i++) {\n          if (initialValues[i].value.eClass === 'TimeSeries') {\n            timeSeries = initialValues[i].value.value\n          }\n        }\n      }\n\n      return timeSeries;\n    }\n    return this.timeSeries;\n  },\n\n\n  /**\n   * Set the time series for the state variable\n   *\n   * @command Variable.setTimeSeries()\n   * @returns {Object} The state variable\n   */\n  setTimeSeries: function (timeSeries) {\n    this.timeSeries = timeSeries;\n    return this;\n  },\n\n  /**\n   * Get the initial value for the state variable\n   *\n   * @command Variable.getInitialValue()\n   * @returns {Object} The initial value of the state variable\n   */\n  getInitialValue: function () {\n\n    return this.getVariable().getWrappedObj().initialValues;\n  },\n\n  /**\n   * Set unit value\n   *\n   * @param unit\n   */\n  setUnit: function (unit) {\n    this.unit = unit;\n  },\n\n  /**\n   * Get the type of tree this is\n   *\n   * @command Variable.getUnit()\n   * @returns {String} Unit for quantity\n   */\n  getUnit: function () {\n    return (this.unit == null) ? this.extractUnit() : this.unit;\n  },\n\n  extractUnit: function () {\n    var unit = undefined;\n    var initialValues = this.getVariable().getWrappedObj().initialValues;\n\n    for (var i = 0; i < initialValues.length; i++) {\n      if (initialValues[i].value.eClass === 'PhysicalQuantity' || initialValues[i].value.eClass === 'TimeSeries') {\n        unit = initialValues[i].value.unit.unit\n      }\n    }\n    return unit;\n  },\n\n  /**\n   * Get watched\n   *\n   * @command Variable.getWatched()\n   * @returns {boolean} true if this variable is being watched\n   */\n  isWatched: function () {\n    // NOTE: this.watched is a flag added by this API / Capability\n    return this.watched;\n  },\n\n  /**\n   * Set watched\n   *\n   * @command Variable.setWatched()\n   * @param {Boolean} watched - Object with options attributes to initialize node\n   */\n  setWatched: function (isWatched, updateServer) {\n    if (updateServer == undefined) {\n      updateServer = true;\n    }\n    this.watched = isWatched;\n    return this;\n  }\n}\n\n"],"file":"AStateVariableCapability.js"}