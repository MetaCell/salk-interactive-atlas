{"version":3,"sources":["../../src/model/ASimpleInstance.js"],"names":["ASimpleInstance","node","wrappedObj","value","type","capabilities","connections","Set","getType","getValue","visualValue","position","id","getInstancePath","extensionObj","push","capabilityId","findIndex","capability","direction","console","error","Array","from","connection","add","ObjectWrapper"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,e;;;;;AAEnB,2BAAaC,IAAb,EAAmB;AAAA;;AAAA;;AACjB,8BAAM;AAAEC,MAAAA,UAAU,EAAED;AAAd,KAAN,EADiB,CAGjB;;AACA,UAAKE,KAAL,GAAaF,IAAI,CAACE,KAAlB;AACA,UAAKC,IAAL,GAAYH,IAAI,CAACG,IAAjB;AACA,UAAKC,YAAL,GAAoB,EAApB;AACA,UAAKC,WAAL,GAAmB,IAAIC,GAAJ,EAAnB;AAPiB;AAQlB;;;;WAED,oBAAY;AACV,aAAO,CAAC,KAAKC,OAAL,EAAD,CAAP;AACD;;;WAED,qBAAa;AACX,aAAO,CAAC,KAAKC,QAAL,EAAD,CAAP;AACD;;;WAED,mBAAW;AACT,aAAO,KAAKL,IAAZ;AACD;;;WAED,oBAAY;AACV,aAAO,KAAKD,KAAZ;AACD;;;WAED,0BAAkB;AAChB,aAAO,KAAKD,UAAL,CAAgBQ,WAAvB;AACD;;;WAED,0BAAkB;AAChB,aAAO,KAAKR,UAAL,CAAgBQ,WAAvB;AACD;;;WAED,uBAAe;AACb,aAAO,KAAKR,UAAL,CAAgBS,QAAvB;AACD;;;WAED,yBAAiB;AACf,YAAM,wEAAN;AACD;;;WAED,yBAAiB;AACf,YAAM,wEAAN;AACD;;;WAED,uBAAe;AACb,YAAM,0CAAN;AACD;;;WAED,uBAAe;AACb,aAAO,EAAP;AACD;;;WAED,2BAAmB;AACjB,aAAO,KAAKT,UAAL,CAAgBU,EAAvB;AACD;;;WAED,mBAAW;AACT,aAAO,KAAKC,eAAL,EAAP;AACD;;;WAED,8BAAsB;AACpB,aAAO,KAAKA,eAAL,EAAP;AACD;;;WAED,qBAAa;AACX,aAAO,IAAP;AACD;;;WAED,oBAAY;AACV,YAAM,sCAAN;AACD;;;WAED,mBAAWC,YAAX,EAAyB;AACvB,yBAAO,IAAP,EAAaA,YAAb;AACA,WAAKT,YAAL,CAAkBU,IAAlB,CAAuBD,YAAY,CAACE,YAApC;AACD;;;WAED,uBAAeA,YAAf,EAA6B;AAC3B,aAAO,KAAKX,YAAL,CAAkBY,SAAlB,CAA4B,UAAAC,UAAU;AAAA,eAAIA,UAAU,KAAKF,YAAnB;AAAA,OAAtC,KAA0E,CAAC,CAAlF;AACD;;;WAED,2BAAmB;AACjB,aAAO,KAAKX,YAAZ;AACD;;;WAED,wBAAgBc,SAAhB,EAA2B;AACzB,UAAIA,SAAJ,EAAe;AACbC,QAAAA,OAAO,CAACC,KAAR,CAAc,mFAAd;AACD;;AAED,aAAOC,KAAK,CAACC,IAAN,CAAW,KAAKjB,WAAhB,CAAP;AACD;;;WAED,uBAAekB,UAAf,EAA2B;AACzB,WAAKlB,WAAL,CAAiBmB,GAAjB,CAAqBD,UAArB;AACD;;;;EAnG0CE,0B","sourcesContent":["import ObjectWrapper from './ObjectWrapper';\nimport { extend } from '../common/Utils';\n\nexport default class ASimpleInstance extends ObjectWrapper{\n\n  constructor (node) {\n    super({ wrappedObj: node });\n\n    // Value and type can be wrapped so let's keep separate from the visual value\n    this.value = node.value;\n    this.type = node.type;\n    this.capabilities = [];\n    this.connections = new Set();\n  }\n\n  getTypes () {\n    return [this.getType()];\n  }\n\n  getValues () {\n    return [this.getValue()];\n  }\n\n  getType () {\n    return this.type;\n  }\n\n  getValue () {\n    return this.value;\n  }\n\n  getVisualValue () {\n    return this.wrappedObj.visualValue;\n  }\n\n  hasVisualValue () {\n    return this.wrappedObj.visualValue;\n  }\n\n  getPosition () {\n    return this.wrappedObj.position;\n  }\n\n  hasVisualType () {\n    throw \"Simple instances don't support visual type: use hasVisualValue instead\";\n  }\n\n  getVisualType () {\n    throw \"Simple instances don't support visual type: use getVisualValue instead\";\n  }\n\n  getVariable () {\n    throw \"Simple instances don't support variables\";\n  }\n\n  getChildren () {\n    return [];\n  }\n\n  getInstancePath () {\n    return this.wrappedObj.id;\n  }\n\n  getPath () {\n    return this.getInstancePath();\n  }\n\n  getRawInstancePath () {\n    return this.getInstancePath();\n  }\n\n  getParent () {\n    return null;\n  }\n\n  addChild () {\n    throw \"Simple instances don't have children\";\n  }\n\n  extendApi (extensionObj) {\n    extend(this, extensionObj);\n    this.capabilities.push(extensionObj.capabilityId);\n  }\n\n  hasCapability (capabilityId) {\n    return this.capabilities.findIndex(capability => capability === capabilityId) != -1;\n  }\n\n  getCapabilities () {\n    return this.capabilities;\n  }\n\n  getConnections (direction) {\n    if (direction) {\n      console.error('getConnections with param `direction` is not yet implemented for simple instances');\n    }\n\n    return Array.from(this.connections);\n  }\n\n  addConnection (connection) {\n    this.connections.add(connection);\n  }\n}\n"],"file":"ASimpleInstance.js"}