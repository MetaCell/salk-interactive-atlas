{"version":3,"sources":["../../src/model/Query.js"],"names":["ObjectWrapper","require","Query","options","prototype","constructor","call","matchingCriteria","undefined","Object","create","getLabel","wrappedObj","label","getDescription","description","getResultType","resultType","getMatchingCriteria","matchesCriteria","type","match","i","length","criteriaMatch","j","typeOf","module","exports"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAAP,WAApB;;AAEA,SAASC,KAAT,CAAgBC,OAAhB,EAAyB;AACvBH,EAAAA,aAAa,CAACI,SAAd,CAAwBC,WAAxB,CAAoCC,IAApC,CAAyC,IAAzC,EAA+CH,OAA/C;AACA,OAAKI,gBAAL,GAAyBJ,OAAO,CAACI,gBAAR,IAA4BC,SAA7B,GAA0CL,OAAO,CAACI,gBAAlD,GAAqE,EAA7F;AACD;;AAEDL,KAAK,CAACE,SAAN,GAAkBK,MAAM,CAACC,MAAP,CAAcV,aAAa,CAACI,SAA5B,CAAlB;AACAF,KAAK,CAACE,SAAN,CAAgBC,WAAhB,GAA8BH,KAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,KAAK,CAACE,SAAN,CAAgBO,QAAhB,GAA2B,YAAY;AACrC,SAAO,KAAKC,UAAL,CAAgBC,KAAvB;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAX,KAAK,CAACE,SAAN,CAAgBU,cAAhB,GAAiC,YAAY;AAC3C,SAAO,KAAKF,UAAL,CAAgBG,WAAvB;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAb,KAAK,CAACE,SAAN,CAAgBY,aAAhB,GAAgC,YAAY;AAC1C,SAAO,KAAKJ,UAAL,CAAgBK,UAAvB;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;;;AACAf,KAAK,CAACE,SAAN,CAAgBc,mBAAhB,GAAsC,YAAY;AAChD,SAAO,KAAKX,gBAAZ;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACAL,KAAK,CAACE,SAAN,CAAgBe,eAAhB,GAAkC,UAAUC,IAAV,EAAgB;AAChD,MAAIC,KAAK,GAAG,KAAZ,CADgD,CAGhD;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKf,gBAAL,CAAsBgB,MAA1C,EAAkDD,CAAC,EAAnD,EAAsD;AAEpD,QAAIE,aAAa,GAAG,KAApB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKlB,gBAAL,CAAsBe,CAAtB,EAAyBC,MAA7C,EAAqDE,CAAC,EAAtD,EAAyD;AACvD;AACAD,MAAAA,aAAa,GAAG,KAAKjB,gBAAL,CAAsBe,CAAtB,EAAyBG,CAAzB,EAA4BC,MAA5B,CAAmCN,IAAnC,CAAhB;;AAEA,UAAI,CAACI,aAAL,EAAmB;AACjB;AACA;AACD;AACF,KAXmD,CAapD;;;AACA,QAAIA,aAAJ,EAAkB;AAChBH,MAAAA,KAAK,GAAG,IAAR;AACA;AACD;AACF;;AAED,SAAOA,KAAP;AACD,CAzBD,C,CA2BA;;;AACAnB,KAAK,WAAL,GAAgBA,KAAhB;AACAyB,MAAM,CAACC,OAAP,GAAiB1B,KAAjB","sourcesContent":["\n\n/**\n * Client class use to represent a simple type.\n *\n * @module model/Query\n * @author Giovanni Idili\n * @author Matteo Cantarelli\n */\n\nvar ObjectWrapper = require('./ObjectWrapper').default;\n\nfunction Query (options) {\n  ObjectWrapper.prototype.constructor.call(this, options);\n  this.matchingCriteria = (options.matchingCriteria != undefined) ? options.matchingCriteria : [];\n}\n\nQuery.prototype = Object.create(ObjectWrapper.prototype);\nQuery.prototype.constructor = Query;\n\n/**\n * Gets the default value for this query\n *\n * @command Query.getDefaultValue()\n *\n * @returns {Object} - Default value\n *\n */\nQuery.prototype.getLabel = function () {\n  return this.wrappedObj.label;\n};\n\n/**\n * Gets the super type for this query\n *\n * @command Query.getDescription()\n *\n * @returns {List<Type>} - Super type\n *\n */\nQuery.prototype.getDescription = function () {\n  return this.wrappedObj.description;\n};\n\n/**\n * Gets the result type for this query\n *\n * @command Query.getResultType()\n *\n * @returns {Object} - Result type\n *\n */\nQuery.prototype.getResultType = function () {\n  return this.wrappedObj.resultType;\n};\n\n/**\n * Gets matching criteria (types) for this query\n *\n * @returns {Array}\n */\nQuery.prototype.getMatchingCriteria = function () {\n  return this.matchingCriteria;\n};\n\n/**\n * Checks if query matches given criteria (type)\n *\n * @param type\n * @returns {boolean}\n */\nQuery.prototype.matchesCriteria = function (type) {\n  var match = false;\n\n  // loop criteria\n  for (var i = 0; i < this.matchingCriteria.length; i++){\n\n    var criteriaMatch = false;\n    for (var j = 0; j < this.matchingCriteria[i].length; j++){\n      // all types must match to satisfy a criteria\n      criteriaMatch = this.matchingCriteria[i][j].typeOf(type);\n\n      if (!criteriaMatch){\n        // if one element of the criteria doesn't match skip out\n        break;\n      }\n    }\n\n    // satisfying one criteria is enough - if it matches skip out\n    if (criteriaMatch){\n      match = true;\n      break;\n    }\n  }\n\n  return match;\n};\n\n// Compatibility with new imports and old require syntax\nQuery.default = Query;\nmodule.exports = Query;\n"],"file":"Query.js"}