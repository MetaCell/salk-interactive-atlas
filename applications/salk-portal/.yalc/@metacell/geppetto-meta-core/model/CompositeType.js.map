{"version":3,"sources":["../../src/model/CompositeType.js"],"names":["Type","require","CompositeType","options","prototype","constructor","call","variables","Object","create","getVariables","hasVariable","varId","vars","match","i","length","getId","getChildren","getConnections","connectionVariables","v","variable","getType","getMetaType","Resources","CONNECTION_TYPE","push","module","exports"],"mappings":";;AAQA;;;;AANA;AACA;AACA;AACA;AACA;AACA;AAGA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAP,WAAX;;AAEA,SAASC,aAAT,CAAwBC,OAAxB,EAAiC;AAC/BH,EAAAA,IAAI,CAACI,SAAL,CAAeC,WAAf,CAA2BC,IAA3B,CAAgC,IAAhC,EAAsCH,OAAtC;AACA,OAAKI,SAAL,GAAkBJ,OAAO,CAACI,SAAR,IAAqB,WAAtB,GAAqCJ,OAAO,CAACI,SAA7C,GAAyD,EAA1E;AACD;;AAEDL,aAAa,CAACE,SAAd,GAA0BI,MAAM,CAACC,MAAP,CAAcT,IAAI,CAACI,SAAnB,CAA1B;AACAF,aAAa,CAACE,SAAd,CAAwBC,WAAxB,GAAsCH,aAAtC;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,aAAa,CAACE,SAAd,CAAwBM,YAAxB,GAAuC,YAAY;AACjD,SAAO,KAAKH,SAAZ;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;;;AACAL,aAAa,CAACE,SAAd,CAAwBO,WAAxB,GAAsC,UAAUC,KAAV,EAAiB;AACrD,MAAIC,IAAI,GAAG,KAAKH,YAAL,EAAX;AAEA,MAAII,KAAK,GAAG,KAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIF,IAAI,CAACE,CAAD,CAAJ,CAAQE,KAAR,MAAmBL,KAAvB,EAA8B;AAC5BE,MAAAA,KAAK,GAAG,IAAR;AACD;AACF;;AAED,SAAOA,KAAP;AACD,CAXD;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAZ,aAAa,CAACE,SAAd,CAAwBc,WAAxB,GAAsC,YAAY;AAChD,SAAO,KAAKX,SAAZ;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAL,aAAa,CAACE,SAAd,CAAwBe,cAAxB,GAAyC,YAAY;AACnD,MAAIC,mBAAmB,GAAG,EAA1B;;AAEA,OAAK,IAAIC,CAAT,IAAc,KAAKX,YAAL,EAAd,EAAmC;AACjC,QAAIY,QAAQ,GAAG,KAAKZ,YAAL,GAAoBW,CAApB,CAAf;;AACA,QAAIC,QAAQ,CAACC,OAAT,GAAmBC,WAAnB,MAAoCC,sBAAUC,eAAlD,EAAmE;AACjEN,MAAAA,mBAAmB,CAACO,IAApB,CAAyBL,QAAzB;AACD;AACF;;AAED,SAAOF,mBAAP;AACD,CAXD,C,CAaA;;;AACAlB,aAAa,WAAb,GAAwBA,aAAxB;AACA0B,MAAM,CAACC,OAAP,GAAiB3B,aAAjB","sourcesContent":["\n\n/**\n * Client class use to represent a composite type.\n *\n * @module model/CompositeType\n * @author Giovanni Idili\n */\nimport Resources from '../Resources';\n\nvar Type = require('./Type').default;\n\nfunction CompositeType (options) {\n  Type.prototype.constructor.call(this, options);\n  this.variables = (options.variables != 'undefined') ? options.variables : [];\n}\n\nCompositeType.prototype = Object.create(Type.prototype);\nCompositeType.prototype.constructor = CompositeType;\n\n\n/**\n * Get variables\n *\n * @command CompositeType.getChildren()\n *\n * @returns {List<Variable>} - List of variables\n *\n */\nCompositeType.prototype.getVariables = function () {\n  return this.variables;\n};\n\n/**\n * Check if the composite contains a given variable\n *\n * @param varId\n * @returns {boolean}\n */\nCompositeType.prototype.hasVariable = function (varId) {\n  var vars = this.getVariables();\n\n  var match = false;\n  for (var i = 0; i < vars.length; i++) {\n    if (vars[i].getId() == varId) {\n      match = true;\n    }\n  }\n\n  return match;\n};\n\n/**\n * Get combined children\n *\n * @command CompositeType.getChildren()\n *\n * @returns {List<Object>} - List of children\n *\n */\nCompositeType.prototype.getChildren = function () {\n  return this.variables;\n};\n\n/**\n * Return connections\n *\n * @command CompositeType.getConnections()\n *\n * @returns {Boolean}\n *\n */\nCompositeType.prototype.getConnections = function () {\n  var connectionVariables = [];\n\n  for (var v in this.getVariables()) {\n    var variable = this.getVariables()[v];\n    if (variable.getType().getMetaType() == Resources.CONNECTION_TYPE) {\n      connectionVariables.push(variable);\n    }\n  }\n\n  return connectionVariables;\n};\n\n// Compatibility with new imports and old require syntax\nCompositeType.default = CompositeType;\nmodule.exports = CompositeType;\n"],"file":"CompositeType.js"}