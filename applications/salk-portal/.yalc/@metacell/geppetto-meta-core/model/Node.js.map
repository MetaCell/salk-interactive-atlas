{"version":3,"sources":["../../src/model/Node.js"],"names":["define","require","Model","Backbone","extend","name","instancePath","id","domainType","_metaType","aspectNode","parent","tags","getInstancePath","getName","getAspectNode","setName","newname","getId","getDomainType","setDomainType","newDomainType","setParent","getParent","_all","predicate","matches","push","getChildren","children","ci","call","getSubNodesOfDomainType","n","getSubNodesOfMetaType","metaType"],"mappings":"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","sourcesContent":["/**\n * The parent node from where all other nodes extend\n *\n * @module model/Node\n * @author Jesus R. Martinez (jesus@metacell.us)\n */\ndefine(['jquery', 'underscore', 'backbone',\n\n  // Add requirement for Backbone-associations module\n\n], function (require) {\n  return {\n    Model: Backbone.Model.extend({\n      name: \"\",\n      instancePath: \"\",\n      id: \"\",\n      domainType: \"\",\n      _metaType: \"\",\n      aspectNode: null,\n      parent: null,\n      tags: null,\n\n      /**\n       * Gets the instance path of the node\n       *\n       * @command Node.getInstancePath()\n       * @returns {String} Instance path of this node\n       *\n       */\n      getInstancePath: function () {\n        return this.instancePath;\n      },\n\n      /**\n       * Gets the name of the node\n       *\n       * @command Node.getName()\n       * @returns {String} Name of the node\n       *\n       */\n      getName: function () {\n        return this.name;\n      },\n\n      getAspectNode: function () {\n        return this.aspectNode;\n      },\n\n      /**\n       * Sets the name of the node\n       *\n       * @command Node.setName()\n       *\n       */\n      setName: function (newname) {\n        this.name = newname;\n      },\n\n      /**\n       * Get the id associated with node\n       *\n       * @command Node.getId()\n       * @returns {String} ID of node\n       */\n      getId: function () {\n        return this.id;\n      },\n\n      getDomainType: function () {\n        return this.domainType;\n      },\n\n      setDomainType: function (newDomainType) {\n        this.domainType = newDomainType;\n      },\n\n      setParent: function (parent) {\n        this.parent = parent;\n      },\n\n      getParent: function () {\n        return this.parent;\n      },\n\n      _all: function (predicate, matches) {\n        if (typeof matches === 'undefined') {\n          var matches = [];\n        }\n\n        if (predicate(this)) {\n          matches.push(this);\n        }\n\n        if (typeof this.getChildren === \"function\") {\n          var children = this.getChildren();\n          for (var ci in children) {\n            this._all.call(children[ci], predicate, matches);\n          }\n        }\n\n        return matches;\n      },\n\n      /**\n       * Search inside a node for all the nodes of a specific domain type.\n       *\n       * @param {String}\n       *            domainType - Domain type\n       * @returns {Array} List of Nodes\n       *\n       */\n      getSubNodesOfDomainType: function (domainType) {\n        return this._all(function (n) {\n          return n.domainType === domainType;\n        });\n      },\n\n      /**\n       * Search inside a node for all the nodes of a specific meta type.\n       *\n       * @param {String}\n       *            metaType - Meta Type\n       * @returns {Array} List of Nodes\n       *\n       */\n      getSubNodesOfMetaType: function (metaType) {\n        return this._all(function (n) {\n          return n._metaType === metaType;\n        });\n      }\n    })\n  };\n});\n"],"file":"Node.js"}