{"version":3,"sources":["../../src/model/ExternalInstance.js"],"names":["Instance","require","ExternalInstance","options","path","projectId","undefined","variable","children","child","direction","connections","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAP,WAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;IACMC,gB;;;;;AAEJ,4BAAaC,OAAb,EAAsB;AAAA;;AAAA;;AACpB,8BAAMA,OAAN;AACA,UAAKC,IAAL,GAAYD,OAAO,CAACC,IAApB;AACA,UAAKC,SAAL,GAAiBF,OAAO,CAACE,SAAzB;AAHoB;AAIrB;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;;WACE,oBAAY;AACV,YAAM,yCAAN;AACD;;;WAED,qBAAa;AACX,YAAM,yCAAN;AACD;AACD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,mBAAW;AACT,YAAM,yCAAN;AACD;;;WAED,oBAAY;AACV,YAAM,yCAAN;AACD;AAED;AACF;AACA;AACA;;;;WACE,uBAAe;AACb,YAAM,yCAAN;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,yBAAiB;AACf,aAAO,KAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;;WACE,yBAAiB;AACf,aAAOC,SAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,uBAAe;AACb,aAAO,KAAKC,QAAZ;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,uBAAe;AACb,aAAO,KAAKC,QAAZ;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,2BAAmB;AACjB,aAAO,KAAKJ,IAAZ;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,8BAAsB;AACpB,YAAM,yCAAN;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,qBAAa;AACX,YAAM,yCAAN;AACD;AAED;AACF;AACA;AACA;AACA;;;;WACE,kBAAUK,KAAV,EAAiB;AACf,YAAM,yCAAN;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACE,wBAAgBC,SAAhB,EAA2B;AACzB,aAAO,KAAKC,WAAZ;AACD;AAED;AACF;AACA;;;;WACE,mBAAU;AACR,YAAM,yCAAN;AACD;;;;EA7J4BX,Q,GAkK/B;;;AACAE,gBAAgB,WAAhB,GAA2BA,gBAA3B;AACAU,MAAM,CAACC,OAAP,GAAiBX,gBAAjB","sourcesContent":["const Instance = require('./Instance').default;\n\n/**\n * Client class use to represent an instance object (instantiation of a variable)\n * \n * @module model/Instance\n * @author Giovanni Idili\n * @author Matteo Cantarelli\n */\nclass ExternalInstance extends Instance {\n\n  constructor (options) {\n    super(options);\n    this.path = options.path;\n    this.projectId = options.projectId;\n  }\n\n  /**\n   * Get the type for this instance\n   *\n   * @command Instance.getTypes()\n   *\n   * @returns {List<Type>} - array of types\n   *\n   */\n  getTypes () {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n\n  getValues () {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n  /**\n   * Get the type of this variable, return a list if it has more than one\n   *\n   * @command Variable.getType()\n   *\n   * @returns List<Type>} - array of types\n   *\n   */\n  getType () {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n\n  getValue () {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n\n  /**\n   *\n   * @returns {*|Object}\n   */\n  getPosition () {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n\n  /**\n   * Checks if this instance has a visual type\n   *\n   * @command Instance.hasVisualType()\n   *\n   * @returns {Boolean}\n   *\n   */\n  hasVisualType () {\n    return false;\n  }\n\n  /**\n   * Gets visual types for the instance if any\n   *\n   * @command Instance.getVisualType()\n   *\n   * @returns {*} - Type or list of Types if more than one is found\n   */\n  getVisualType () {\n    return undefined;\n  }\n\n  /**\n   * Get the variable for this instance\n   *\n   * @command Instance.getVariable()\n   *\n   * @returns {Variable} - Variable object for this instance\n   *\n   */\n  getVariable () {\n    return this.variable;\n  }\n\n  /**\n   * Get children instances\n   *\n   * @command Instance.getChildren()\n   *\n   * @returns {List<Instance>} - List of instances\n   *\n   */\n  getChildren () {\n    return this.children;\n  }\n\n  /**\n   * Get instance path\n   *\n   * @command Instance.getInstancePath()\n   *\n   * @returns {String} - Instance path\n   *\n   */\n  getInstancePath () {\n    return this.path;\n  }\n\n  /**\n   * Get raw instance path (without array shortening)\n   *\n   * @command Instance.getRawInstancePath()\n   *\n   * @returns {String} - Instance path\n   *\n   */\n  getRawInstancePath () {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n\n  /**\n   * Get parent\n   *\n   * @command Instance.getParent()\n   *\n   * @returns {Instance} - Parent instance\n   *\n   */\n  getParent () {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n\n  /**\n   * Get children instances\n   *\n   * @command Instance.addChild()\n   */\n  addChild (child) {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n\n  /**\n   * Return connections, user Resources.INPUT / OUTPUT /\n   * INPUT_OUTPUT to filter\n   *\n   * @command Instance.getConnections(direction)\n   *\n   * @returns {List<Instance>}\n   *\n   */\n  getConnections (direction) {\n    return this.connections;\n  }\n\n  /**\n   * Deletes instance\n   */\n  delete () {\n    throw \"Invalid operation with ExternalInstance\";\n  }\n\n \n}\n\n// Compatibility with new imports and old require syntax\nExternalInstance.default = ExternalInstance;\nmodule.exports = ExternalInstance;\n"],"file":"ExternalInstance.js"}