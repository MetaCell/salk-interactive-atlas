{"version":3,"sources":["../../src/model/Datasource.js"],"names":["ObjectWrapper","require","Datasource","options","prototype","constructor","call","queries","undefined","Object","create","getUrl","getWrappedObj","url","getDatasourceService","dataSourceService","getLibraryConfigurations","libraryConfigurations","getQueries","getDependenciesLibrary","dependenciesLibrary","getTargetLibrary","targetLibrary","getFetchVariableQuery","fetchVariableQuery","getChildren","fetchVariable","variableIds","callback","console","warn","trace","module","exports"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAAP,WAApB;;AAEA,SAASC,UAAT,CAAqBC,OAArB,EAA8B;AAC5BH,EAAAA,aAAa,CAACI,SAAd,CAAwBC,WAAxB,CAAoCC,IAApC,CAAyC,IAAzC,EAA+CH,OAA/C;AACA,OAAKI,OAAL,GAAgBJ,OAAO,CAACI,OAAR,IAAmBC,SAApB,GAAiCL,OAAO,CAACI,OAAzC,GAAmD,EAAlE;AACD;;AAEDL,UAAU,CAACE,SAAX,GAAuBK,MAAM,CAACC,MAAP,CAAcV,aAAa,CAACI,SAA5B,CAAvB;AACAF,UAAU,CAACE,SAAX,CAAqBC,WAArB,GAAmCH,UAAnC;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,UAAU,CAACE,SAAX,CAAqBO,MAArB,GAA8B,YAAY;AACxC,SAAO,KAAKC,aAAL,GAAqBC,GAA5B;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAX,UAAU,CAACE,SAAX,CAAqBU,oBAArB,GAA4C,YAAY;AACtD,SAAO,KAAKF,aAAL,GAAqBG,iBAA5B;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAb,UAAU,CAACE,SAAX,CAAqBY,wBAArB,GAAgD,YAAY;AAC1D,SAAO,KAAKJ,aAAL,GAAqBK,qBAA5B;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAf,UAAU,CAACE,SAAX,CAAqBc,UAArB,GAAkC,YAAY;AAC5C,SAAO,KAAKX,OAAZ;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAL,UAAU,CAACE,SAAX,CAAqBe,sBAArB,GAA8C,YAAY;AACxD,SAAO,KAAKP,aAAL,GAAqBQ,mBAA5B;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAlB,UAAU,CAACE,SAAX,CAAqBiB,gBAArB,GAAwC,YAAY;AAClD,SAAO,KAAKT,aAAL,GAAqBU,aAA5B;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACApB,UAAU,CAACE,SAAX,CAAqBmB,qBAArB,GAA6C,YAAY;AACvD,SAAO,KAAKX,aAAL,GAAqBY,kBAA5B;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAtB,UAAU,CAACE,SAAX,CAAqBqB,WAArB,GAAmC,YAAY;AAC7C;AACF;AACA;AACA;AACC,CALD;AAOA;AACA;AACA;AACA;AACA;;;AACAvB,UAAU,CAACE,SAAX,CAAqBsB,aAArB,GAAqC,UAAUC,WAAV,EAAuBC,QAAvB,EAAiC;AACpEC,EAAAA,OAAO,CAACC,IAAR,CAAa,kDAAb;AACAD,EAAAA,OAAO,CAACE,KAAR;AACD,CAHD,C,CAKA;;;AACA7B,UAAU,WAAV,GAAqBA,UAArB;AACA8B,MAAM,CAACC,OAAP,GAAiB/B,UAAjB","sourcesContent":["\n\n/**\n * Client class use to represent a library that contains a set of types.\n *\n * @module model/Datasource\n * @author Giovanni Idili\n */\n\nvar ObjectWrapper = require('./ObjectWrapper').default;\n\nfunction Datasource (options) {\n  ObjectWrapper.prototype.constructor.call(this, options);\n  this.queries = (options.queries != undefined) ? options.queries : [];\n}\n\nDatasource.prototype = Object.create(ObjectWrapper.prototype);\nDatasource.prototype.constructor = Datasource;\n\n\n/**\n * Get url for this datasource\n *\n * @command Datasource.getUrl()\n *\n * @returns {String} - datasource url as string\n *\n */\nDatasource.prototype.getUrl = function () {\n  return this.getWrappedObj().url;\n};\n\n/**\n * Get datasource service for this datasource\n *\n * @command Datasource.getDatasourceService()\n *\n * @returns {String} - datasource service id as string\n *\n */\nDatasource.prototype.getDatasourceService = function () {\n  return this.getWrappedObj().dataSourceService;\n};\n\n/**\n * Get library configurations for this datasource\n *\n * @command Datasource.getLibraryConfigurations()\n *\n * @returns {List<Object>} - datasource service id as string\n *\n */\nDatasource.prototype.getLibraryConfigurations = function () {\n  return this.getWrappedObj().libraryConfigurations;\n};\n\n/**\n * Get queries for this datasource\n *\n * @command Datasource.getQueries()\n *\n * @returns {List<Object>} - datasource service id as string\n *\n */\nDatasource.prototype.getQueries = function () {\n  return this.queries;\n};\n\n/**\n * Get dependencies library\n *\n * @command Datasource.getDependenciesLibrary()\n *\n * @returns {Object} - dependency library object\n *\n */\nDatasource.prototype.getDependenciesLibrary = function () {\n  return this.getWrappedObj().dependenciesLibrary;\n};\n\n/**\n * Get target library\n *\n * @command Datasource.getTargetLibrary()\n *\n * @returns {Object} - target library object\n *\n */\nDatasource.prototype.getTargetLibrary = function () {\n  return this.getWrappedObj().targetLibrary;\n};\n\n/**\n * Get fetch variable query\n *\n * @command Datasource.getFetchVariableQuery()\n *\n * @returns {Object} - fetch variable query\n *\n */\nDatasource.prototype.getFetchVariableQuery = function () {\n  return this.getWrappedObj().fetchVariableQuery;\n};\n\n/**\n * Get combined children\n *\n * @command Datasource.getChildren()\n *\n * @returns {List<Object>} - List of children\n *\n */\nDatasource.prototype.getChildren = function () {\n  /*\n   * TODO: return contained children once they are model objects (lib config / queries)\n   * return this.getWrappedObj().libraryConfigurations.concat(this.getWrappedObj().queries.concat([this.getWrappedObj().fetchVariableQuery]));\n   */\n};\n\n/**\n * Fetch variable and add to Geppetto model given variable id\n *\n * @param variableId\n */\nDatasource.prototype.fetchVariable = function (variableIds, callback) {\n  console.warn(\"Deprecated api call. Use Manager.fetchVariables(\");\n  console.trace();\n};\n\n// Compatibility with new imports and old require syntax\nDatasource.default = Datasource;\nmodule.exports = Datasource;\n"],"file":"Datasource.js"}