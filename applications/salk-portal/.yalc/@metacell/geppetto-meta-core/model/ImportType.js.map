{"version":3,"sources":["../../src/model/ImportType.js"],"names":["Type","require","ImportType","options","prototype","constructor","call","visualType","superType","capabilities","variableReferences","Object","create","getUrl","getWrappedObj","url","getReferenceUrl","referenceURL","getModelInterpreterId","modelInterpreterId","resolve","callback","console","warn","trace","module","exports"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAP,WAAX;;AAGA,SAASC,UAAT,CAAqBC,OAArB,EAA8B;AAC5BH,EAAAA,IAAI,CAACI,SAAL,CAAeC,WAAf,CAA2BC,IAA3B,CAAgC,IAAhC,EAAsCH,OAAtC;AACA,OAAKI,UAAL,GAAkBJ,OAAO,CAACI,UAA1B;AACA,OAAKC,SAAL,GAAkBL,OAAO,CAACK,SAAR,IAAqB,WAAtB,GAAqCL,OAAO,CAACK,SAA7C,GAAyD,EAA1E;AACA,OAAKC,YAAL,GAAoB,EAApB;AACA,OAAKC,kBAAL,GAA0B,EAA1B;AACD;;AAEDR,UAAU,CAACE,SAAX,GAAuBO,MAAM,CAACC,MAAP,CAAcZ,IAAI,CAACI,SAAnB,CAAvB;AACAF,UAAU,CAACE,SAAX,CAAqBC,WAArB,GAAmCH,UAAnC;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,UAAU,CAACE,SAAX,CAAqBS,MAArB,GAA8B,YAAY;AACxC,SAAO,KAAKC,aAAL,GAAqBC,GAA5B;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAb,UAAU,CAACE,SAAX,CAAqBY,eAArB,GAAuC,YAAY;AACjD,SAAO,KAAKF,aAAL,GAAqBG,YAA5B;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAf,UAAU,CAACE,SAAX,CAAqBc,qBAArB,GAA6C,YAAY;AACvD,SAAO,KAAKJ,aAAL,GAAqBK,kBAA5B;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;;;AACAjB,UAAU,CAACE,SAAX,CAAqBgB,OAArB,GAA+B,UAAUC,QAAV,EAAoB;AACjDC,EAAAA,OAAO,CAACC,IAAR,CAAa,kDAAb;AACAD,EAAAA,OAAO,CAACE,KAAR;AACD,CAHD,C,CAKA;;;AACAtB,UAAU,WAAV,GAAqBA,UAArB;AACAuB,MAAM,CAACC,OAAP,GAAiBxB,UAAjB","sourcesContent":["/**\n * Client class use to represent an array type.\n *\n * @module model/ImportType\n * @author Giovanni Idili\n * @author Matteo Cantarelli\n */\n\nvar Type = require('./Type').default;\n\n\nfunction ImportType (options) {\n  Type.prototype.constructor.call(this, options);\n  this.visualType = options.visualType;\n  this.superType = (options.superType != 'undefined') ? options.superType : [];\n  this.capabilities = [];\n  this.variableReferences = [];\n}\n\nImportType.prototype = Object.create(Type.prototype);\nImportType.prototype.constructor = ImportType;\n\n\n/**\n * Get type for array type\n *\n * @command ImportType.getUrl()\n *\n * @returns {String}\n *\n */\nImportType.prototype.getUrl = function () {\n  return this.getWrappedObj().url;\n};\n\n/**\n * Get type for array type\n *\n * @command ImportType.getReferenceUrl()\n *\n * @returns {String}\n *\n */\nImportType.prototype.getReferenceUrl = function () {\n  return this.getWrappedObj().referenceURL;\n};\n\n/**\n * Get type for array type\n *\n * @command ImportType.getModelInterpreterId()\n *\n * @returns {String}\n *\n */\nImportType.prototype.getModelInterpreterId = function () {\n  return this.getWrappedObj().modelInterpreterId;\n};\n\n/**\n * Trigger import type resolution - will cause this import type to get swapped with an actual type\n *\n * @command ImportType.resolve()\n */\nImportType.prototype.resolve = function (callback) {\n  console.warn(\"Deprecated api call: use the GeppettoManager api\");\n  console.trace();\n};\n\n// Compatibility with new imports and old require syntax\nImportType.default = ImportType;\nmodule.exports = ImportType;\n"],"file":"ImportType.js"}