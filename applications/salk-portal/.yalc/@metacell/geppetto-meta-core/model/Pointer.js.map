{"version":3,"sources":["../../src/model/Pointer.js"],"names":["ObjectWrapper","require","Pointer","options","prototype","constructor","call","elements","undefined","Object","create","getPath","types","path","getElements","e","length","element","getPoint","getWrappedObj","point","module","exports"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAAP,WAApB;;AAEA,SAASC,OAAT,CAAkBC,OAAlB,EAA2B;AACzBH,EAAAA,aAAa,CAACI,SAAd,CAAwBC,WAAxB,CAAoCC,IAApC,CAAyC,IAAzC,EAA+CH,OAA/C;AACA,OAAKI,QAAL,GAAiBJ,OAAO,CAACI,QAAR,IAAoBC,SAArB,GAAkCL,OAAO,CAACI,QAA1C,GAAqD,EAArE;AACD;;AAEDL,OAAO,CAACE,SAAR,GAAoBK,MAAM,CAACC,MAAP,CAAcV,aAAa,CAACI,SAA5B,CAApB;AACAF,OAAO,CAACE,SAAR,CAAkBC,WAAlB,GAAgCH,OAAhC;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,OAAO,CAACE,SAAR,CAAkBO,OAAlB,GAA4B,UAAUC,KAAV,EAAiB;AAC3C,MAAIA,KAAK,KAAKJ,SAAd,EAAyB;AACvBI,IAAAA,KAAK,GAAG,KAAR;AACD;;AAED,MAAIC,IAAI,GAAG,EAAX;AACA,MAAIN,QAAQ,GAAG,KAAKO,WAAL,EAAf;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,QAAQ,CAACS,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,QAAIE,OAAO,GAAGV,QAAQ,CAACQ,CAAD,CAAtB;AAEAF,IAAAA,IAAI,IAAII,OAAO,CAACN,OAAR,CAAgBC,KAAhB,CAAR;;AAEA,QAAIG,CAAC,GAAGR,QAAQ,CAACS,MAAT,GAAkB,CAA1B,EAA6B;AAC3BH,MAAAA,IAAI,IAAI,GAAR;AACD;AACF;;AAED,SAAOA,IAAP;AACD,CAnBD;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAX,OAAO,CAACE,SAAR,CAAkBU,WAAlB,GAAgC,YAAY;AAC1C,SAAO,KAAKP,QAAZ;AACD,CAFD;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAL,OAAO,CAACE,SAAR,CAAkBc,QAAlB,GAA6B,YAAW;AACtC,SAAO,KAAKC,aAAL,GAAqBC,KAA5B;AACD,CAFD,C,CAKA;;;AACAlB,OAAO,WAAP,GAAkBA,OAAlB;AACAmB,MAAM,CAACC,OAAP,GAAiBpB,OAAjB","sourcesContent":["\n\n/**\n * Client class use to represent a pointer.\n *\n * @module model/Pointer\n * @author Giovanni Idili\n */\n\n  \nvar ObjectWrapper = require('./ObjectWrapper').default;\n\nfunction Pointer (options) {\n  ObjectWrapper.prototype.constructor.call(this, options);\n  this.elements = (options.elements != undefined) ? options.elements : [];\n}\n\nPointer.prototype = Object.create(ObjectWrapper.prototype);\nPointer.prototype.constructor = Pointer;\n\n\n/**\n * Gets the full path for this pointer\n *\n * @command Pointer.getPath()\n *\n * @returns {String} - Path\n *\n */\nPointer.prototype.getPath = function (types) {\n  if (types === undefined) {\n    types = false;\n  }\n\n  var path = \"\";\n  var elements = this.getElements();\n\n  for (var e = 0; e < elements.length; e++) {\n    var element = elements[e];\n\n    path += element.getPath(types);\n\n    if (e < elements.length - 1) {\n      path += \".\";\n    }\n  }\n\n  return path;\n};\n    \n\n/**\n * Get PointerElements\n *\n * @command POinter.getElements()\n *\n * @returns {List<PointerElement>} - array of elements\n */\nPointer.prototype.getElements = function () {\n  return this.elements;\n};\n    \n/**\n * Get the optional point attribute to refer to a point in space.\n *\n * @command Pointer.getPoint()\n *\n * @returns {Point} - 3d point\n */\nPointer.prototype.getPoint = function (){\n  return this.getWrappedObj().point;\n}\n    \n\n// Compatibility with new imports and old require syntax\nPointer.default = Pointer;\nmodule.exports = Pointer;\n\n\n"],"file":"Pointer.js"}