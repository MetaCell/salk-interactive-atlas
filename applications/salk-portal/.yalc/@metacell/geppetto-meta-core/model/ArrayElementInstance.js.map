{"version":3,"sources":["../../src/model/ArrayElementInstance.js"],"names":["Instance","require","ArrayElementInstance","options","index","children","concat","getChildren","c","length","ModelFactory","deleteInstance","parent","getParent","parentPath","parentId","undefined","getInstancePath","getId","path","replace","getVariable","getType","getDefaultValue","elements","getIndex","position","types","getTypes","module","exports"],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AACA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAP,WAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;;IACMC,oB;;;;;AAEJ,gCAAaC,OAAb,EAAsB;AAAA;;AAAA;;AACpB,8BAAMA,OAAN;AACA,UAAKC,KAAL,GAAaD,OAAO,CAACC,KAArB;AAFoB;AAGrB;;;;WAGD,oBAAY;AACV,aAAO,KAAKA,KAAZ;AACD;;;WAED,mBAAU;AACR,UAAIC,QAAQ,GAAG,GAAGC,MAAH,CAAU,KAAKC,WAAL,EAAV,CAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxCH,QAAAA,QAAQ,CAACG,CAAD,CAAR;AACD;;AAEDE,+BAAaC,cAAb,CAA4B,IAA5B;AACD;;;WAGD,2BAAmB;AACjB,UAAIC,MAAM,GAAG,KAAKC,SAAL,EAAb;AACA,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,QAAQ,GAAG,EAAf;;AAEA,UAAIH,MAAM,IAAI,IAAV,IAAkBA,MAAM,IAAII,SAAhC,EAA2C;AACzCF,QAAAA,UAAU,GAAGF,MAAM,CAACK,eAAP,EAAb;AACAF,QAAAA,QAAQ,GAAGH,MAAM,CAACM,KAAP,EAAX;AACD;;AAED,UAAIC,IAAI,GAAGL,UAAU,CAACM,OAAX,CAAmBL,QAAnB,EAA6B,KAAKG,KAAL,EAA7B,CAAX;AAEA,aAAQJ,UAAU,IAAI,EAAf,GAAqBK,IAArB,GAA4B,KAAKD,KAAL,EAAnC;AACD;;;WAED,uBAAe;AAEb,UAAK,KAAKG,WAAL,GAAmBC,OAAnB,GAA6BC,eAA7B,GAA+CC,QAA/C,IAA2DR,SAA5D,IACQ,KAAKK,WAAL,GAAmBC,OAAnB,GAA6BC,eAA7B,GAA+CC,QAA/C,CAAwD,KAAKC,QAAL,EAAxD,KAA4ET,SADxF,EACoG;AAClG,eAAO,KAAKK,WAAL,GAAmBC,OAAnB,GAA6BC,eAA7B,GAA+CC,QAA/C,CAAwD,KAAKC,QAAL,EAAxD,EAAyEC,QAAhF;AACD;AAEF;;;WAED,oBAAY;AACV,aAAO,CAAC,KAAKL,WAAL,GAAmBC,OAAnB,GAA6BA,OAA7B,EAAD,CAAP;AACD;;;WAED,mBAAW;AACT,UAAIK,KAAK,GAAG,KAAKC,QAAL,EAAZ;;AACA,UAAID,KAAK,CAAClB,MAAN,IAAgB,CAApB,EAAuB;AACrB,eAAOkB,KAAK,CAAC,CAAD,CAAZ;AACD,OAFD,MAEO;AACL,eAAOA,KAAP;AACD;AACF;;;;EAzDgC3B,Q;;AA6DnCE,oBAAoB,WAApB,GAA+BA,oBAA/B;AACA2B,MAAM,CAACC,OAAP,GAAiB5B,oBAAjB","sourcesContent":["import ModelFactory from '../ModelFactory';\nconst Instance = require('./Instance').default;\n\n/**\n * Client class use to represent an array element instance.\n *\n * @module model/ArrayElementInstance\n * @author Giovanni Idili\n */\nclass ArrayElementInstance extends Instance {\n  \n  constructor (options) {\n    super(options);\n    this.index = options.index;\n  }\n\n\n  getIndex () {\n    return this.index;\n  }\n\n  delete () {\n    var children = [].concat(this.getChildren());\n    for (var c = 0; c < children.length; c++) {\n      children[c].delete();\n    }\n\n    ModelFactory.deleteInstance(this);\n  }\n\n\n  getInstancePath () {\n    var parent = this.getParent();\n    var parentPath = \"\";\n    var parentId = \"\";\n\n    if (parent != null && parent != undefined) {\n      parentPath = parent.getInstancePath();\n      parentId = parent.getId();\n    }\n\n    var path = parentPath.replace(parentId, this.getId());\n\n    return (parentPath != \"\") ? path : this.getId();\n  }\n\n  getPosition () {\n\n    if ((this.getVariable().getType().getDefaultValue().elements != undefined)\n            && (this.getVariable().getType().getDefaultValue().elements[this.getIndex()] != undefined)) {\n      return this.getVariable().getType().getDefaultValue().elements[this.getIndex()].position;\n    }\n\n  }\n\n  getTypes () {\n    return [this.getVariable().getType().getType()];\n  }\n\n  getType () {\n    var types = this.getTypes();\n    if (types.length == 1) {\n      return types[0];\n    } else {\n      return types;\n    }\n  }\n\n}\n\nArrayElementInstance.default = ArrayElementInstance;\nmodule.exports = ArrayElementInstance;\n"],"file":"ArrayElementInstance.js"}