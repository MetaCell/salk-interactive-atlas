{"version":3,"sources":["../../src/model/PointerElement.js"],"names":["PointerElement","options","wrappedObj","variable","type","index","prototype","constructor","getVariable","getType","getWrappedObj","getIndex","getPath","types","undefined","path","element","resolvedVar","resolvedType","getId","module","exports"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASA,cAAT,CAAyBC,OAAzB,EAAkC;AAEhC,OAAKC,UAAL,GAAkBD,OAAO,CAACC,UAA1B;AACA,OAAKC,QAAL,GAAgBF,OAAO,CAACE,QAAxB;AACA,OAAKC,IAAL,GAAYH,OAAO,CAACG,IAApB;AACA,OAAKC,KAAL,GAAaJ,OAAO,CAACI,KAArB;AACD;;AAEDL,cAAc,CAACM,SAAf,GAA2B;AAEzBC,EAAAA,WAAW,EAAEP,cAFY;;AAIzB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEQ,EAAAA,WAAW,EAAE,uBAAY;AACvB,WAAO,KAAKL,QAAZ;AACD,GAdwB;;AAkBzB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACEM,EAAAA,OAAO,EAAE,mBAAY;AACnB,WAAO,KAAKL,IAAZ;AACD,GA5BwB;;AA+BzB;AACF;AACA;AACA;AACA;AACA;AACEM,EAAAA,aAAa,EAAE,yBAAY;AACzB,WAAO,KAAKR,UAAZ;AACD,GAvCwB;;AA0CzB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACES,EAAAA,QAAQ,EAAE,oBAAY;AACpB,WAAO,KAAKN,KAAZ;AACD,GApDwB;;AAuDzB;AACF;AACA;AACA;AACA;AACA;AACA;AACEO,EAAAA,OAAO,EAAE,iBAAUC,KAAV,EAAiB;AACxB,QAAIA,KAAK,KAAKC,SAAd,EAAyB;AACvBD,MAAAA,KAAK,GAAG,KAAR;AACD;;AAED,QAAIE,IAAI,GAAG,EAAX;AAEA,QAAIC,OAAO,GAAG,IAAd;AACA,QAAIC,WAAW,GAAGD,OAAO,CAACR,WAAR,EAAlB;AACA,QAAIU,YAAY,GAAGF,OAAO,CAACP,OAAR,EAAnB;AACAM,IAAAA,IAAI,IAAIE,WAAW,CAACE,KAAZ,EAAR;;AACA,QAAIN,KAAJ,EAAW;AACTE,MAAAA,IAAI,IAAI,MAAMG,YAAY,CAACC,KAAb,EAAN,GAA6B,GAArC;AACD;;AACD,QAAIH,OAAO,CAACL,QAAR,KAAqB,CAAC,CAA1B,EAA6B;AAC3BI,MAAAA,IAAI,IAAI,MAAMC,OAAO,CAACL,QAAR,EAAN,GAA2B,GAAnC;AACD;;AAED,WAAOI,IAAP;AACD;AAjFwB,CAA3B,C,CAoFA;;AACAf,cAAc,WAAd,GAAyBA,cAAzB;AACAoB,MAAM,CAACC,OAAP,GAAiBrB,cAAjB","sourcesContent":["\n\n/**\n * Client class use to represent a pointer element.\n *\n * @module model/PointerElement\n * @author Giovanni Idili\n * @author Matteo Cantarelli\n */\n\n\nfunction PointerElement (options) {\n\n  this.wrappedObj = options.wrappedObj;\n  this.variable = options.variable;\n  this.type = options.type;\n  this.index = options.index;\n}\n\nPointerElement.prototype = {\n\n  constructor: PointerElement,\n\n  /**\n   * Gets the variable\n   *\n   * @command PointerElement.getVariable()\n   *\n   * @returns {Variable} - variable\n   *\n   */\n  getVariable: function () {\n    return this.variable;\n  }\n\n  ,\n\n  /**\n   * Gets the type\n   *\n   * @command PointerElement.getType()\n   *\n   * @returns {Type} - type\n   *\n   */\n  getType: function () {\n    return this.type;\n  }\n  ,\n\n  /**\n   * Get the wrapped obj\n   *\n   * @command Node.getWrappedObj()\n   * @returns {Object} - Wrapped object\n   */\n  getWrappedObj: function () {\n    return this.wrappedObj;\n  }\n  ,\n\n  /**\n   * Gets the index if it's pointing to an array element\n   *\n   * @command PointerElement.getIndex()\n   *\n   * @returns {Integer} - index in a given array\n   *\n   */\n  getIndex: function () {\n    return this.index;\n  }\n  ,\n\n  /**\n   * Get the path for this pointer element\n   *\n   * @command PointerElement.getPath()\n   *\n   * @returns {String} - path\n   */\n  getPath: function (types) {\n    if (types === undefined) {\n      types = false;\n    }\n\n    var path = '';\n\n    var element = this;\n    var resolvedVar = element.getVariable();\n    var resolvedType = element.getType();\n    path += resolvedVar.getId();\n    if (types) {\n      path += \"(\" + resolvedType.getId() + \")\";\n    }\n    if (element.getIndex() > -1) {\n      path += \"[\" + element.getIndex() + \"]\";\n    }\n\n    return path;\n  }\n};\n\n// Compatibility with new imports and old require syntax\nPointerElement.default = PointerElement;\nmodule.exports = PointerElement;\n"],"file":"PointerElement.js"}