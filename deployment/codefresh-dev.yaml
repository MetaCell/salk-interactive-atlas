version: '1.0'
stages:
- prepare
- build
- deploy
- publish
steps:
  main_clone:
    title: Clone main repository
    type: git-clone
    stage: prepare
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_BRANCH}}'
    git: github
  post_main_clone:
    title: Post main clone
    type: parallel
    stage: prepare
    steps:
    - title: Cloning cloud-harness repository...
      type: git-clone
      stage: prepare
      repo: https://github.com/MetaCell/cloud-harness.git
      revision: '${{CLOUDHARNESS_BRANCH}}'
      working_directory: .
      git: github
  prepare_deployment:
    title: Prepare helm chart
    image: python:3.7
    stage: prepare
    working_directory: .
    commands:
    - pip install cloud-harness/utilities
    - harness-deployment cloud-harness . -m build -t ${{CF_BUILD_ID}} -d ${{DOMAIN}}
      -r ${{REGISTRY}} -n ${{NAMESPACE}} -rs ${{REGISTRY_SECRET}} -e dev -i salk-portal
  prepare_deployment_view:
    commands:
    - helm template ./deployment/helm --debug -n ${{NAMESPACE}}
    environment:
    - ACTION=auth
    - KUBE_CONTEXT=${{NAMESPACE}}
    image: codefresh/cfstep-helm:3.6.2
    stage: prepare
    title: View helm chart
  build_base_images:
    title: Build base images
    type: parallel
    stage: build
    steps:
      cloudharness-frontend-build:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: infrastructure/base-images/cloudharness-frontend-build/Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/salk/
        - CLOUDHARNESS_FRONTEND_BUILD=${{REGISTRY}}/salk/cloudharness-frontend-build:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE=${{REGISTRY}}/salk/cloudharness-base:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE_DEBIAN=${{REGISTRY}}/salk/cloudharness-base-debian:${{CF_BUILD_ID}}
        - CLOUDHARNESS_FLASK=${{REGISTRY}}/salk/cloudharness-flask:${{CF_BUILD_ID}}
        - WORKFLOWS_NOTIFY_QUEUE=${{REGISTRY}}/salk/workflows-notify-queue:${{CF_BUILD_ID}}
        - WORKFLOWS_SEND_RESULT_EVENT=${{REGISTRY}}/salk/workflows-send-result-event:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_DOWNLOAD=${{REGISTRY}}/salk/workflows-extract-download:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_S3=${{REGISTRY}}/salk/workflows-extract-s3:${{CF_BUILD_ID}}
        - WORKFLOWS_PRINT_FILE=${{REGISTRY}}/salk/workflows-print-file:${{CF_BUILD_ID}}
        image_name: salk/cloudharness-frontend-build
        title: Cloudharness frontend build
        working_directory: ./build
      cloudharness-base:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: infrastructure/base-images/cloudharness-base/Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/salk/
        - CLOUDHARNESS_FRONTEND_BUILD=${{REGISTRY}}/salk/cloudharness-frontend-build:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE=${{REGISTRY}}/salk/cloudharness-base:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE_DEBIAN=${{REGISTRY}}/salk/cloudharness-base-debian:${{CF_BUILD_ID}}
        - CLOUDHARNESS_FLASK=${{REGISTRY}}/salk/cloudharness-flask:${{CF_BUILD_ID}}
        - WORKFLOWS_NOTIFY_QUEUE=${{REGISTRY}}/salk/workflows-notify-queue:${{CF_BUILD_ID}}
        - WORKFLOWS_SEND_RESULT_EVENT=${{REGISTRY}}/salk/workflows-send-result-event:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_DOWNLOAD=${{REGISTRY}}/salk/workflows-extract-download:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_S3=${{REGISTRY}}/salk/workflows-extract-s3:${{CF_BUILD_ID}}
        - WORKFLOWS_PRINT_FILE=${{REGISTRY}}/salk/workflows-print-file:${{CF_BUILD_ID}}
        image_name: salk/cloudharness-base
        title: Cloudharness base
        working_directory: ./build
      cloudharness-base-debian:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: infrastructure/base-images/cloudharness-base-debian/Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/salk/
        - CLOUDHARNESS_FRONTEND_BUILD=${{REGISTRY}}/salk/cloudharness-frontend-build:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE=${{REGISTRY}}/salk/cloudharness-base:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE_DEBIAN=${{REGISTRY}}/salk/cloudharness-base-debian:${{CF_BUILD_ID}}
        - CLOUDHARNESS_FLASK=${{REGISTRY}}/salk/cloudharness-flask:${{CF_BUILD_ID}}
        - WORKFLOWS_NOTIFY_QUEUE=${{REGISTRY}}/salk/workflows-notify-queue:${{CF_BUILD_ID}}
        - WORKFLOWS_SEND_RESULT_EVENT=${{REGISTRY}}/salk/workflows-send-result-event:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_DOWNLOAD=${{REGISTRY}}/salk/workflows-extract-download:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_S3=${{REGISTRY}}/salk/workflows-extract-s3:${{CF_BUILD_ID}}
        - WORKFLOWS_PRINT_FILE=${{REGISTRY}}/salk/workflows-print-file:${{CF_BUILD_ID}}
        image_name: salk/cloudharness-base-debian
        title: Cloudharness base debian
        working_directory: ./build
  build_static_images:
    title: Build static images
    type: parallel
    stage: build
    steps:
      cloudharness-flask:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/salk/
        - CLOUDHARNESS_FRONTEND_BUILD=${{REGISTRY}}/salk/cloudharness-frontend-build:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE=${{REGISTRY}}/salk/cloudharness-base:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE_DEBIAN=${{REGISTRY}}/salk/cloudharness-base-debian:${{CF_BUILD_ID}}
        - CLOUDHARNESS_FLASK=${{REGISTRY}}/salk/cloudharness-flask:${{CF_BUILD_ID}}
        - WORKFLOWS_NOTIFY_QUEUE=${{REGISTRY}}/salk/workflows-notify-queue:${{CF_BUILD_ID}}
        - WORKFLOWS_SEND_RESULT_EVENT=${{REGISTRY}}/salk/workflows-send-result-event:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_DOWNLOAD=${{REGISTRY}}/salk/workflows-extract-download:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_S3=${{REGISTRY}}/salk/workflows-extract-s3:${{CF_BUILD_ID}}
        - WORKFLOWS_PRINT_FILE=${{REGISTRY}}/salk/workflows-print-file:${{CF_BUILD_ID}}
        image_name: salk/cloudharness-flask
        title: Cloudharness flask
        working_directory: ./build/infrastructure/common-images/cloudharness-flask
  build_application_images:
    type: parallel
    stage: build
    steps:
      workflows:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/salk/
        - CLOUDHARNESS_FLASK=${{REGISTRY}}/salk/cloudharness-flask:${{CF_BUILD_ID}}
        image_name: salk/workflows
        title: Workflows
        working_directory: ./build/applications/workflows/server
      workflows-notify-queue:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/salk/
        - CLOUDHARNESS_FRONTEND_BUILD=${{REGISTRY}}/salk/cloudharness-frontend-build:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE=${{REGISTRY}}/salk/cloudharness-base:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE_DEBIAN=${{REGISTRY}}/salk/cloudharness-base-debian:${{CF_BUILD_ID}}
        - CLOUDHARNESS_FLASK=${{REGISTRY}}/salk/cloudharness-flask:${{CF_BUILD_ID}}
        - WORKFLOWS_NOTIFY_QUEUE=${{REGISTRY}}/salk/workflows-notify-queue:${{CF_BUILD_ID}}
        - WORKFLOWS_SEND_RESULT_EVENT=${{REGISTRY}}/salk/workflows-send-result-event:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_DOWNLOAD=${{REGISTRY}}/salk/workflows-extract-download:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_S3=${{REGISTRY}}/salk/workflows-extract-s3:${{CF_BUILD_ID}}
        - WORKFLOWS_PRINT_FILE=${{REGISTRY}}/salk/workflows-print-file:${{CF_BUILD_ID}}
        image_name: salk/workflows-notify-queue
        title: Workflows notify queue
        working_directory: ./build/applications/workflows/tasks/notify-queue
      workflows-send-result-event:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/salk/
        - CLOUDHARNESS_FRONTEND_BUILD=${{REGISTRY}}/salk/cloudharness-frontend-build:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE=${{REGISTRY}}/salk/cloudharness-base:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE_DEBIAN=${{REGISTRY}}/salk/cloudharness-base-debian:${{CF_BUILD_ID}}
        - CLOUDHARNESS_FLASK=${{REGISTRY}}/salk/cloudharness-flask:${{CF_BUILD_ID}}
        - WORKFLOWS_NOTIFY_QUEUE=${{REGISTRY}}/salk/workflows-notify-queue:${{CF_BUILD_ID}}
        - WORKFLOWS_SEND_RESULT_EVENT=${{REGISTRY}}/salk/workflows-send-result-event:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_DOWNLOAD=${{REGISTRY}}/salk/workflows-extract-download:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_S3=${{REGISTRY}}/salk/workflows-extract-s3:${{CF_BUILD_ID}}
        - WORKFLOWS_PRINT_FILE=${{REGISTRY}}/salk/workflows-print-file:${{CF_BUILD_ID}}
        image_name: salk/workflows-send-result-event
        title: Workflows send result event
        working_directory: ./build/applications/workflows/tasks/send-result-event
      workflows-extract-download:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/salk/
        - CLOUDHARNESS_FRONTEND_BUILD=${{REGISTRY}}/salk/cloudharness-frontend-build:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE=${{REGISTRY}}/salk/cloudharness-base:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE_DEBIAN=${{REGISTRY}}/salk/cloudharness-base-debian:${{CF_BUILD_ID}}
        - CLOUDHARNESS_FLASK=${{REGISTRY}}/salk/cloudharness-flask:${{CF_BUILD_ID}}
        - WORKFLOWS_NOTIFY_QUEUE=${{REGISTRY}}/salk/workflows-notify-queue:${{CF_BUILD_ID}}
        - WORKFLOWS_SEND_RESULT_EVENT=${{REGISTRY}}/salk/workflows-send-result-event:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_DOWNLOAD=${{REGISTRY}}/salk/workflows-extract-download:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_S3=${{REGISTRY}}/salk/workflows-extract-s3:${{CF_BUILD_ID}}
        - WORKFLOWS_PRINT_FILE=${{REGISTRY}}/salk/workflows-print-file:${{CF_BUILD_ID}}
        image_name: salk/workflows-extract-download
        title: Workflows extract download
        working_directory: ./build/applications/workflows/tasks/extract-download
      workflows-extract-s3:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/salk/
        - CLOUDHARNESS_FRONTEND_BUILD=${{REGISTRY}}/salk/cloudharness-frontend-build:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE=${{REGISTRY}}/salk/cloudharness-base:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE_DEBIAN=${{REGISTRY}}/salk/cloudharness-base-debian:${{CF_BUILD_ID}}
        - CLOUDHARNESS_FLASK=${{REGISTRY}}/salk/cloudharness-flask:${{CF_BUILD_ID}}
        - WORKFLOWS_NOTIFY_QUEUE=${{REGISTRY}}/salk/workflows-notify-queue:${{CF_BUILD_ID}}
        - WORKFLOWS_SEND_RESULT_EVENT=${{REGISTRY}}/salk/workflows-send-result-event:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_DOWNLOAD=${{REGISTRY}}/salk/workflows-extract-download:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_S3=${{REGISTRY}}/salk/workflows-extract-s3:${{CF_BUILD_ID}}
        - WORKFLOWS_PRINT_FILE=${{REGISTRY}}/salk/workflows-print-file:${{CF_BUILD_ID}}
        image_name: salk/workflows-extract-s3
        title: Workflows extract s3
        working_directory: ./build/applications/workflows/tasks/extract-s3
      workflows-print-file:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/salk/
        - CLOUDHARNESS_FRONTEND_BUILD=${{REGISTRY}}/salk/cloudharness-frontend-build:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE=${{REGISTRY}}/salk/cloudharness-base:${{CF_BUILD_ID}}
        - CLOUDHARNESS_BASE_DEBIAN=${{REGISTRY}}/salk/cloudharness-base-debian:${{CF_BUILD_ID}}
        - CLOUDHARNESS_FLASK=${{REGISTRY}}/salk/cloudharness-flask:${{CF_BUILD_ID}}
        - WORKFLOWS_NOTIFY_QUEUE=${{REGISTRY}}/salk/workflows-notify-queue:${{CF_BUILD_ID}}
        - WORKFLOWS_SEND_RESULT_EVENT=${{REGISTRY}}/salk/workflows-send-result-event:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_DOWNLOAD=${{REGISTRY}}/salk/workflows-extract-download:${{CF_BUILD_ID}}
        - WORKFLOWS_EXTRACT_S3=${{REGISTRY}}/salk/workflows-extract-s3:${{CF_BUILD_ID}}
        - WORKFLOWS_PRINT_FILE=${{REGISTRY}}/salk/workflows-print-file:${{CF_BUILD_ID}}
        image_name: salk/workflows-print-file
        title: Workflows print file
        working_directory: ./build/applications/workflows/tasks/print-file
      accounts:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/salk/
        image_name: salk/accounts
        title: Accounts
        working_directory: ./build/applications/accounts
      common:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/salk/
        - CLOUDHARNESS_FLASK=${{REGISTRY}}/salk/cloudharness-flask:${{CF_BUILD_ID}}
        image_name: salk/common
        title: Common
        working_directory: ./build/applications/common/server
      workspaces:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/salk/
        - CLOUDHARNESS_BASE=${{REGISTRY}}/salk/cloudharness-base:${{CF_BUILD_ID}}
        image_name: salk/workspaces
        title: Workspaces
        working_directory: ./build/applications/workspaces
      volumemanager:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/salk/
        - CLOUDHARNESS_FLASK=${{REGISTRY}}/salk/cloudharness-flask:${{CF_BUILD_ID}}
        image_name: salk/volumemanager
        title: Volumemanager
        working_directory: ./build/applications/volumemanager/server
      salk-portal:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/salk/
        image_name: salk/salk-portal
        title: Salk portal
        working_directory: ./build/applications/salk-portal
      jupyterhub:
        type: build
        stage: build
        tag: '${{CF_BUILD_ID}}'
        dockerfile: Dockerfile
        registry: '${{CODEFRESH_REGISTRY}}'
        buildkit: true
        build_arguments:
        - TAG=${{CF_BUILD_ID}}
        - NAMESPACE=${{NAMESPACE}}
        - DOMAIN=${{DOMAIN}}
        - NOCACHE=${{CF_BUILD_ID}}
        - REGISTRY=${{REGISTRY}}/salk/
        - CLOUDHARNESS_BASE=${{REGISTRY}}/salk/cloudharness-base:${{CF_BUILD_ID}}
        image_name: salk/jupyterhub
        title: Jupyterhub
        working_directory: ./build/applications/jupyterhub
  deployment:
    stage: deploy
    image: codefresh/cfstep-helm:3.4.1
    title: Installing chart
    environment:
    - CHART_REF=./deployment/helm
    - RELEASE_NAME=${{NAMESPACE}}
    - KUBE_CONTEXT=${{CLUSTER_NAME}}
    - NAMESPACE=${{NAMESPACE}}
    - CHART_VERSION=${{DEPLOYMENT_PUBLISH_TAG}}
    - HELM_REPO_USE_HTTP=false
    - HELM_REPO_CONTEXT_PATH=
    - TIMEOUT=600s
    - VALUESFILE_values=./deployment/helm/values.yaml
  publish:
    type: parallel
    stage: publish
    steps:
      publish_cloudharness-frontend-build:
        stage: publish
        type: push
        title: Cloudharness frontend build
        candidate: '${{REGISTRY}}/salk/cloudharness-frontend-build:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_cloudharness-base:
        stage: publish
        type: push
        title: Cloudharness base
        candidate: '${{REGISTRY}}/salk/cloudharness-base:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_cloudharness-base-debian:
        stage: publish
        type: push
        title: Cloudharness base debian
        candidate: '${{REGISTRY}}/salk/cloudharness-base-debian:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_cloudharness-flask:
        stage: publish
        type: push
        title: Cloudharness flask
        candidate: '${{REGISTRY}}/salk/cloudharness-flask:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_workflows:
        stage: publish
        type: push
        title: Workflows
        candidate: '${{REGISTRY}}/salk/workflows:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_workflows-notify-queue:
        stage: publish
        type: push
        title: Workflows notify queue
        candidate: '${{REGISTRY}}/salk/workflows-notify-queue:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_workflows-send-result-event:
        stage: publish
        type: push
        title: Workflows send result event
        candidate: '${{REGISTRY}}/salk/workflows-send-result-event:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_workflows-extract-download:
        stage: publish
        type: push
        title: Workflows extract download
        candidate: '${{REGISTRY}}/salk/workflows-extract-download:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_workflows-extract-s3:
        stage: publish
        type: push
        title: Workflows extract s3
        candidate: '${{REGISTRY}}/salk/workflows-extract-s3:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_workflows-print-file:
        stage: publish
        type: push
        title: Workflows print file
        candidate: '${{REGISTRY}}/salk/workflows-print-file:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_accounts:
        stage: publish
        type: push
        title: Accounts
        candidate: '${{REGISTRY}}/salk/accounts:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_common:
        stage: publish
        type: push
        title: Common
        candidate: '${{REGISTRY}}/salk/common:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_workspaces:
        stage: publish
        type: push
        title: Workspaces
        candidate: '${{REGISTRY}}/salk/workspaces:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_volumemanager:
        stage: publish
        type: push
        title: Volumemanager
        candidate: '${{REGISTRY}}/salk/volumemanager:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_salk-portal:
        stage: publish
        type: push
        title: Salk portal
        candidate: '${{REGISTRY}}/salk/salk-portal:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
      publish_jupyterhub:
        stage: publish
        type: push
        title: Jupyterhub
        candidate: '${{REGISTRY}}/salk/jupyterhub:${{CF_BUILD_ID}}'
        tags:
        - '${{DEPLOYMENT_PUBLISH_TAG}}'
        registry: '${{REGISTRY_PUBLISH_URL}}'
